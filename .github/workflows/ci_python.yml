name: CI

on:
  push:
    paths:
      - 'python/**'  
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linter
      run: |
        pip install flake8
        flake8

    - name: Run tests
      run: |
        pip install pytest
        pytest

    - name: Publish test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results
        path: ./pytest-report.xml

    - name: Validate commit message
      if: ${{ github.event_name == 'push' }}
      run: |
        COMMIT_REGEX='^(feat|fix|docs|style|refactor|perf|test|chore|revert)(\([a-z0-9-]+\))?: [A-Z].+'
        if ! grep -E "$COMMIT_REGEX" "$GITHUB_EVENT_PATH"; then
          echo "Invalid commit message. Please follow the commit message convention."
          exit 1
        fi

    - name: Generate PR comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');

          const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'pytest-report.xml');
          const report = fs.readFileSync(reportPath, 'utf8');
          const comment = `**Test Results:**\n\n\`\`\`\n${report}\n\`\`\``;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

